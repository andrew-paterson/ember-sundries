{"version":3,"file":"profile-image-editor.js","sources":["../../../src/components/ember-sundries/profile-image-editor.js"],"sourcesContent":["import Component from '@glimmer/component';\nimport { action } from '@ember/object';\nimport Cropper from 'cropperjs';\nimport { tracked } from '@glimmer/tracking';\n// import IconImageComponent from 'svg-repo/components/svg-repo/icons/icon-image';\n// import { ensureSafeComponent } from '@embroider/util';\nimport './profile-image-editor.css';\n\nasync function getImageBlob(imageUrl) {\n  const response = await fetch(imageUrl);\n  return response.blob();\n}\n\nexport default class ProfileImageEditor extends Component {\n  @tracked zoomRatio = 1;\n  @tracked zoomLevel;\n  @tracked src;\n\n  // iconImageComponent = ensureSafeComponent(IconImageComponent);\n\n  constructor() {\n    super(...arguments);\n    this.src = this.args.src;\n  }\n\n  get sliderZoomParams() {\n    if (!this.zoomRatio) {\n      return null;\n    }\n    return {\n      min: Math.floor(this.zoomRatio * 100) / 100,\n      max: 1,\n    };\n  }\n\n  @action setZoomRatio(attempt = 1) {\n    if (attempt > 200) {\n      return;\n    }\n    attempt++;\n    const canvasData = this.cropper.getCanvasData();\n    if (!canvasData.naturalWidth) {\n      setTimeout(() => {\n        this.setZoomRatio(attempt);\n      }, 300);\n      return;\n    }\n    if (canvasData.naturalHeight > canvasData.naturalWidth) {\n      const containerWidth = this.containerEl.offsetWidth;\n      const naturalWidth = canvasData.naturalWidth;\n      this.zoomRatio = containerWidth / naturalWidth;\n    } else {\n      const containerHeight = this.containerEl.offsetHeight;\n      const naturalHeight = canvasData.naturalHeight;\n      this.zoomRatio = containerHeight / naturalHeight;\n    }\n  }\n\n  @action\n  didInsert(el) {\n    this.containerEl = el;\n    const image = this.containerEl.querySelector('#image');\n    const _this = this;\n    this.cropper = new Cropper(image, {\n      aspectRatio: 1,\n      viewMode: 3,\n      autoCropArea: 1,\n      cropBoxMovable: false,\n      cropBoxResizable: false,\n      dragMode: 'move',\n      zoomOnWheel: false,\n      background: false,\n      crop(event) {\n        _this.cropperData = event.detail;\n      },\n    });\n    this.setZoomRatio();\n  }\n\n  @action\n  async getCroppedCanvas() {\n    const image = this.containerEl.querySelector('#image');\n    const src = image.getAttribute('src');\n    const blob = await getImageBlob(src);\n    const final = {};\n    (this.args.outputWidths || '200').split(',').forEach((width) => {\n      final[`width${width}px`] = this.cropper\n        .getCroppedCanvas({ maxWidth: width, fillColor: '#fff' })\n        .toDataURL(blob.type);\n    });\n    this.args.saveAction(final);\n  }\n\n  @action\n  reset() {\n    this.cropper.reset();\n  }\n\n  @action\n  rotate90(direction) {\n    if (direction === 'anticlockwise') {\n      this.cropper.rotate(-90);\n    } else {\n      this.cropper.rotate(90);\n    }\n  }\n\n  @action getZoomLevel() {\n    return (\n      Math.floor(\n        (this.cropper.canvasData.width / this.cropper.canvasData.naturalWidth) *\n          100,\n      ) / 100\n    );\n  }\n\n  @action\n  clickZoom(direction) {\n    const intervals = getRegularIntervals(\n      this.sliderZoomParams.min,\n      this.sliderZoomParams.max,\n    );\n    if (direction === 'out') {\n      if (this.zoomLevel + 0.1 * this.zoomLevel < this.sliderZoomParams.min) {\n        this.cropper.zoomTo(this.sliderZoomParams.min);\n      } else {\n        const closest = findClosestLowerNumber(intervals, this.zoomLevel);\n        this.cropper.zoomTo(closest);\n      }\n    } else {\n      if (this.zoomLevel + 0.1 * this.zoomLevel > this.sliderZoomParams.max) {\n        this.cropper.zoomTo(this.sliderZoomParams.max);\n      } else {\n        const closest = findClosestHigherNumber(\n          intervals,\n          this.zoomLevel || this.sliderZoomParams.min,\n        );\n        this.cropper.zoomTo(closest);\n      }\n    }\n    this.zoomLevel = this.getZoomLevel();\n  }\n\n  @action\n  sliderZoom(e) {\n    this.cropper.zoomTo(e.target.value);\n  }\n\n  @action\n  flip(direction) {\n    if (direction === 'vertical') {\n      this.cropper.scaleY(-1 * (this.cropperData?.scaleY || 1));\n    } else {\n      this.cropper.scaleX(-1 * (this.cropperData?.scaleX || 1));\n    }\n  }\n\n  @action\n  async loadImage(files, allowedFileTypes) {\n    const _this = this;\n    var done = function (url) {\n      _this.src = url;\n      _this.cropper.replace(url);\n      _this.setZoomRatio();\n    };\n    var reader;\n    var file;\n\n    if (files && files.length > 0) {\n      file = files[0];\n      if (URL) {\n        done(URL.createObjectURL(file));\n      } else if (FileReader) {\n        reader = new FileReader();\n        reader.onload = function () {\n          done(reader.result);\n        };\n        reader.readAsDataURL(file);\n      }\n    }\n  }\n}\n\nfunction getRegularIntervals(x, y) {\n  const intervals = [];\n  const step = (y - x) / 10;\n  for (let i = 0; i < 10; i++) {\n    intervals.push(Math.floor((x + i * step) * 100) / 100);\n  }\n  return [...intervals, y];\n}\n\nconst numbers = [0.5, 0.55, 0.6, 0.65, 0.7, 0.75, 0.8, 0.85, 0.9, 0.95, 1];\n\nfunction findClosestLowerNumber(numbers, x) {\n  for (let i = numbers.length - 1; i >= 0; i--) {\n    if (numbers[i] < x) {\n      return numbers[i];\n    }\n  }\n  return null; // Return null if no lower number is found\n}\n\nfunction findClosestHigherNumber(numbers, x) {\n  for (let i = 0; i < numbers.length; i++) {\n    if (numbers[i] > x) {\n      return numbers[i];\n    }\n  }\n  return null; // Return null if no higher number is found\n}\n"],"names":["getImageBlob","imageUrl","response","fetch","blob","ProfileImageEditor","Component","g","prototype","tracked","i","void 0","constructor","arguments","src","args","sliderZoomParams","zoomRatio","min","Math","floor","max","setZoomRatio","attempt","canvasData","cropper","getCanvasData","naturalWidth","setTimeout","naturalHeight","containerWidth","containerEl","offsetWidth","containerHeight","offsetHeight","n","action","didInsert","el","image","querySelector","_this","Cropper","aspectRatio","viewMode","autoCropArea","cropBoxMovable","cropBoxResizable","dragMode","zoomOnWheel","background","crop","event","cropperData","detail","getCroppedCanvas","getAttribute","final","outputWidths","split","forEach","width","maxWidth","fillColor","toDataURL","type","saveAction","reset","rotate90","direction","rotate","getZoomLevel","clickZoom","intervals","getRegularIntervals","zoomLevel","zoomTo","closest","findClosestLowerNumber","findClosestHigherNumber","sliderZoom","e","target","value","flip","scaleY","scaleX","loadImage","files","allowedFileTypes","done","url","replace","reader","file","length","URL","createObjectURL","FileReader","onload","result","readAsDataURL","x","y","step","push","numbers","setComponentTemplate","TEMPLATE"],"mappings":"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"}